import OpenAI from 'openai';
import axios from 'axios';
import path from 'path';
import fs from 'fs';
import os from 'os';
import sharp from 'sharp';

// Initialize OpenAI client
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

/**
 * Enhance a Pokemon fusion image generated by Stable Diffusion
 * This uses a generic prompt to improve the image while avoiding content policy issues
 */
export async function enhanceWithDirectGeneration(
  pokemon1Name: string,
  pokemon2Name: string
): Promise<string | null> {
  try {
    console.log('GPT Direct Enhancement - Starting direct generation for fusion');
    console.log('GPT Direct Enhancement - API Key format check:', process.env.OPENAI_API_KEY?.startsWith('sk-'));
    
    // This is our most reliable prompt that works consistently with content policies
    const enhancementPrompt = `A digital illustration of an original animated creature design.
      Style: Clean animation with smooth outlines, kid friendly
      Background: Pure white
      Composition: Single character centered in the frame
      Details: Balanced proportions, friendly appearance, polished finish`;
    
    console.log('GPT Direct Enhancement - Generating image with optimized prompt');

    // Generate a new image using GPT-image-1
    const response = await openai.images.generate({
      model: "gpt-image-1",
      prompt: enhancementPrompt,
      n: 1,
      size: "1024x1024"
    });

    if (!response.data || response.data.length === 0) {
      console.error('GPT Direct Enhancement - No image data in response');
      return null;
    }

    // Handle the response (URL or base64)
    if (response.data[0].url) {
      console.log('GPT Direct Enhancement - Successfully generated enhanced image');
      return response.data[0].url;
    } else if (response.data[0].b64_json) {
      console.log('GPT Direct Enhancement - Got base64 data, but URL is expected');
      // We need a URL for the API, so returning null if we get base64
      return null;
    }

    console.error('GPT Direct Enhancement - No image URL or base64 in response data');
    return null;
  } catch (error) {
    console.error('GPT Direct Enhancement - Error:', {
      error,
      message: error instanceof Error ? error.message : 'Unknown error',
      stack: error instanceof Error ? error.stack : undefined
    });
    
    // Check for organization verification error
    if (error instanceof Error && 
        error.message && 
        error.message.includes('organization verification')) {
      console.error('GPT Direct Enhancement - Organization verification required. Please visit: https://help.openai.com/en/articles/10910291-api-organization-verification');
    }

    // Check for content policy violation
    if (error instanceof Error && 
        (error.message?.includes('content policy') || error.message?.includes('safety system'))) {
      console.error('GPT Direct Enhancement - Content policy violation: The request was rejected by the moderation system');
    }
    
    return null;
  }
}

// Support for backward compatibility
export async function generatePokemonFusion(): Promise<string | null> {
  console.log('GPT Direct Enhancement - generatePokemonFusion is deprecated');
  return null;
}

export async function enhanceImageWithGptVision(): Promise<string | null> {
  console.log('GPT Direct Enhancement - enhanceImageWithGptVision is deprecated');
  return null;
} 